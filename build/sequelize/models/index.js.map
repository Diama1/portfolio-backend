{"version":3,"sources":["../../../src/sequelize/models/index.js"],"names":["dotenv","config","basename","path","__filename","env","process","NODE_ENV","require","db","sequelize","use_env_variable","Sequelize","database","username","password","host","dialect","logging","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,QAAQ,GAAGC,iBAAKD,QAAL,CAAcE,UAAd,CAAjB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMN,MAAM,GAAGO,OAAO,CAAC,wBAAD,CAAP,CAAkCH,GAAlC,CAAf;;AAEA,IAAMI,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIT,MAAM,CAACU,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcN,OAAO,CAACD,GAAR,CAAYJ,MAAM,CAACU,gBAAnB,CAAd,EAAoDV,MAApD,CAAZ;AACD,CAFD,MAEO;AACLS,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcX,MAAM,CAACY,QAArB,EAA+BZ,MAAM,CAACa,QAAtC,EAAgDb,MAAM,CAACc,QAAvD,EAAiE;AAC3EC,IAAAA,IAAI,EAAEf,MAAM,CAACe,IAD8D;AAE3EC,IAAAA,OAAO,EAAE,UAFkE;AAG3EC,IAAAA,OAAO,EAAE;AAHkE,GAAjE,CAAZ;AAKD;;AAEDC,eACGC,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,UAACC,IAAD;AAAA,SAAWA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKrB,QAAvC,IAAqDqB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAAlF;AAAA,CAFV,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAMI,KAAK,GAAGjB,SAAS,UAAT,CAAiBP,iBAAKyB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAd,EAAAA,EAAE,CAACkB,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CANH;;AAQAG,MAAM,CAACC,IAAP,CAAYtB,EAAZ,EAAgBiB,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIvB,EAAE,CAACuB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BxB,IAAAA,EAAE,CAACuB,SAAD,CAAF,CAAcC,SAAd,CAAwBxB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,qBAAf;eAEeH,E","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('../../config/config.js')[env];\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, {\n    host: config.host,\n    dialect: 'postgres',\n    logging: false,\n  });\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter((file) => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n"],"file":"index.js"}